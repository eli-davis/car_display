// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BluetoothChannel.proto

#include "BluetoothChannel.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace tag {
namespace aas {
class BluetoothProfileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BluetoothProfile> _instance;
} _BluetoothProfile_default_instance_;
class BluetoothChannelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BluetoothChannel> _instance;
} _BluetoothChannel_default_instance_;
}  // namespace aas
}  // namespace tag
static void InitDefaultsscc_info_BluetoothChannel_BluetoothChannel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tag::aas::_BluetoothChannel_default_instance_;
    new (ptr) ::tag::aas::BluetoothChannel();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tag::aas::BluetoothChannel::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BluetoothChannel_BluetoothChannel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BluetoothChannel_BluetoothChannel_2eproto}, {}};

static void InitDefaultsscc_info_BluetoothProfile_BluetoothChannel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tag::aas::_BluetoothProfile_default_instance_;
    new (ptr) ::tag::aas::BluetoothProfile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tag::aas::BluetoothProfile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BluetoothProfile_BluetoothChannel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BluetoothProfile_BluetoothChannel_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_BluetoothChannel_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_BluetoothChannel_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_BluetoothChannel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_BluetoothChannel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tag::aas::BluetoothProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tag::aas::BluetoothChannel, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tag::aas::BluetoothChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tag::aas::BluetoothChannel, adapter_address_),
  PROTOBUF_FIELD_OFFSET(::tag::aas::BluetoothChannel, available_profiles_),
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tag::aas::BluetoothProfile)},
  { 5, 12, sizeof(::tag::aas::BluetoothChannel)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tag::aas::_BluetoothProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tag::aas::_BluetoothChannel_default_instance_),
};

const char descriptor_table_protodef_BluetoothChannel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026BluetoothChannel.proto\022\007tag.aas\"M\n\020Blu"
  "etoothProfile\"9\n\004Enum\022\010\n\004NONE\020\000\022\t\n\005UNK_1"
  "\020\001\022\010\n\004A2DP\020\002\022\t\n\005UNK_3\020\003\022\007\n\003HFP\020\004\"g\n\020Blue"
  "toothChannel\022\027\n\017adapter_address\030\001 \002(\t\022:\n"
  "\022available_profiles\030\002 \003(\0162\036.tag.aas.Blue"
  "toothProfile.Enum"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_BluetoothChannel_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_BluetoothChannel_2eproto_sccs[2] = {
  &scc_info_BluetoothChannel_BluetoothChannel_2eproto.base,
  &scc_info_BluetoothProfile_BluetoothChannel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_BluetoothChannel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_BluetoothChannel_2eproto = {
  false, false, descriptor_table_protodef_BluetoothChannel_2eproto, "BluetoothChannel.proto", 217,
  &descriptor_table_BluetoothChannel_2eproto_once, descriptor_table_BluetoothChannel_2eproto_sccs, descriptor_table_BluetoothChannel_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_BluetoothChannel_2eproto::offsets,
  file_level_metadata_BluetoothChannel_2eproto, 2, file_level_enum_descriptors_BluetoothChannel_2eproto, file_level_service_descriptors_BluetoothChannel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_BluetoothChannel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_BluetoothChannel_2eproto)), true);
namespace tag {
namespace aas {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BluetoothProfile_Enum_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_BluetoothChannel_2eproto);
  return file_level_enum_descriptors_BluetoothChannel_2eproto[0];
}
bool BluetoothProfile_Enum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr BluetoothProfile_Enum BluetoothProfile::NONE;
constexpr BluetoothProfile_Enum BluetoothProfile::UNK_1;
constexpr BluetoothProfile_Enum BluetoothProfile::A2DP;
constexpr BluetoothProfile_Enum BluetoothProfile::UNK_3;
constexpr BluetoothProfile_Enum BluetoothProfile::HFP;
constexpr BluetoothProfile_Enum BluetoothProfile::Enum_MIN;
constexpr BluetoothProfile_Enum BluetoothProfile::Enum_MAX;
constexpr int BluetoothProfile::Enum_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void BluetoothProfile::InitAsDefaultInstance() {
}
class BluetoothProfile::_Internal {
 public:
};

BluetoothProfile::BluetoothProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tag.aas.BluetoothProfile)
}
BluetoothProfile::BluetoothProfile(const BluetoothProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tag.aas.BluetoothProfile)
}

void BluetoothProfile::SharedCtor() {
}

BluetoothProfile::~BluetoothProfile() {
  // @@protoc_insertion_point(destructor:tag.aas.BluetoothProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BluetoothProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BluetoothProfile::ArenaDtor(void* object) {
  BluetoothProfile* _this = reinterpret_cast< BluetoothProfile* >(object);
  (void)_this;
}
void BluetoothProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BluetoothProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BluetoothProfile& BluetoothProfile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BluetoothProfile_BluetoothChannel_2eproto.base);
  return *internal_default_instance();
}


void BluetoothProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:tag.aas.BluetoothProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BluetoothProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BluetoothProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tag.aas.BluetoothProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tag.aas.BluetoothProfile)
  return target;
}

size_t BluetoothProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tag.aas.BluetoothProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BluetoothProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tag.aas.BluetoothProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const BluetoothProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BluetoothProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tag.aas.BluetoothProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tag.aas.BluetoothProfile)
    MergeFrom(*source);
  }
}

void BluetoothProfile::MergeFrom(const BluetoothProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tag.aas.BluetoothProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BluetoothProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tag.aas.BluetoothProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BluetoothProfile::CopyFrom(const BluetoothProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tag.aas.BluetoothProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BluetoothProfile::IsInitialized() const {
  return true;
}

void BluetoothProfile::InternalSwap(BluetoothProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BluetoothProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BluetoothChannel::InitAsDefaultInstance() {
}
class BluetoothChannel::_Internal {
 public:
  using HasBits = decltype(std::declval<BluetoothChannel>()._has_bits_);
  static void set_has_adapter_address(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

BluetoothChannel::BluetoothChannel(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  available_profiles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tag.aas.BluetoothChannel)
}
BluetoothChannel::BluetoothChannel(const BluetoothChannel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      available_profiles_(from.available_profiles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  adapter_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_adapter_address()) {
    adapter_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_adapter_address(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tag.aas.BluetoothChannel)
}

void BluetoothChannel::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BluetoothChannel_BluetoothChannel_2eproto.base);
  adapter_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BluetoothChannel::~BluetoothChannel() {
  // @@protoc_insertion_point(destructor:tag.aas.BluetoothChannel)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BluetoothChannel::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  adapter_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BluetoothChannel::ArenaDtor(void* object) {
  BluetoothChannel* _this = reinterpret_cast< BluetoothChannel* >(object);
  (void)_this;
}
void BluetoothChannel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BluetoothChannel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BluetoothChannel& BluetoothChannel::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BluetoothChannel_BluetoothChannel_2eproto.base);
  return *internal_default_instance();
}


void BluetoothChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:tag.aas.BluetoothChannel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  available_profiles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    adapter_address_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BluetoothChannel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string adapter_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_adapter_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tag.aas.BluetoothChannel.adapter_address");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .tag.aas.BluetoothProfile.Enum available_profiles = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::tag::aas::BluetoothProfile_Enum_IsValid(val))) {
              _internal_add_available_profiles(static_cast<::tag::aas::BluetoothProfile_Enum>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_available_profiles(), ptr, ctx, ::tag::aas::BluetoothProfile_Enum_IsValid, &_internal_metadata_, 2);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BluetoothChannel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tag.aas.BluetoothChannel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string adapter_address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_adapter_address().data(), static_cast<int>(this->_internal_adapter_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "tag.aas.BluetoothChannel.adapter_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_adapter_address(), target);
  }

  // repeated .tag.aas.BluetoothProfile.Enum available_profiles = 2;
  for (int i = 0, n = this->_internal_available_profiles_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
        2, this->_internal_available_profiles(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tag.aas.BluetoothChannel)
  return target;
}

size_t BluetoothChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tag.aas.BluetoothChannel)
  size_t total_size = 0;

  // required string adapter_address = 1;
  if (_internal_has_adapter_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_adapter_address());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tag.aas.BluetoothProfile.Enum available_profiles = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_available_profiles_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_available_profiles(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BluetoothChannel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tag.aas.BluetoothChannel)
  GOOGLE_DCHECK_NE(&from, this);
  const BluetoothChannel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BluetoothChannel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tag.aas.BluetoothChannel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tag.aas.BluetoothChannel)
    MergeFrom(*source);
  }
}

void BluetoothChannel::MergeFrom(const BluetoothChannel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tag.aas.BluetoothChannel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  available_profiles_.MergeFrom(from.available_profiles_);
  if (from._internal_has_adapter_address()) {
    _internal_set_adapter_address(from._internal_adapter_address());
  }
}

void BluetoothChannel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tag.aas.BluetoothChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BluetoothChannel::CopyFrom(const BluetoothChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tag.aas.BluetoothChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BluetoothChannel::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void BluetoothChannel::InternalSwap(BluetoothChannel* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  available_profiles_.InternalSwap(&other->available_profiles_);
  adapter_address_.Swap(&other->adapter_address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BluetoothChannel::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace aas
}  // namespace tag
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tag::aas::BluetoothProfile* Arena::CreateMaybeMessage< ::tag::aas::BluetoothProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tag::aas::BluetoothProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::tag::aas::BluetoothChannel* Arena::CreateMaybeMessage< ::tag::aas::BluetoothChannel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tag::aas::BluetoothChannel >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
